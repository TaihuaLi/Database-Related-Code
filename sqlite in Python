import sqlite3
from sqlite3 import OperationalError

conn = sqlite3.connect('CSC455.db')
c = conn.cursor()

# Clean, create and populate the database
try:
    c.execute('''CREATE TABLE ZooKeeper
(
  ZID        NUMBER(3,0),
  ZName       VARCHAR2(25) NOT NULL,
  HourlyRate NUMBER(6, 2) NOT NULL,

  CONSTRAINT ZooKeeper_PK
     PRIMARY KEY(ZID)
);''')
except OperationalError:
    c.execute("DROP TABLE ZooKeeper;")
    c.execute("DROP TABLE Animal;")
    c.execute("DROP TABLE Handles;")
    c.execute('''CREATE TABLE ZooKeeper
    (
    ZID        NUMBER(3,0),
    ZName       VARCHAR2(25) NOT NULL,
    HourlyRate NUMBER(6, 2) NOT NULL,
    CONSTRAINT ZooKeeper_PK
    PRIMARY KEY(ZID)
    );''')

c.execute('''CREATE TABLE Animal
(
  AID       NUMBER(3, 0),
  AName      VARCHAR(30) NOT NULL,
  ACategory VARCHAR(18),

  TimeToFeed NUMBER(4,2),

  CONSTRAINT Animal_PK
    PRIMARY KEY(AID)
);''')
c.execute('''CREATE TABLE Handles
(
  ZooKeepID      NUMBER(3,0),
  AnimalID     NUMBER(3,0),

  Assigned     DATE,

  CONSTRAINT Handles_PK
    PRIMARY KEY(ZooKeepID, AnimalID),

  CONSTRAINT Handles_FK1
    FOREIGN KEY(ZooKeepID)
      REFERENCES ZooKeeper(ZID),

  CONSTRAINT Handles_FK2
    FOREIGN KEY(AnimalID)
      REFERENCES Animal(AID)
);''')
c.execute("INSERT INTO ZooKeeper VALUES (1, 'Jim Carrey', 500);")
c.execute("INSERT INTO ZooKeeper VALUES (2, 'Tina Fey', 350);")
c.execute("INSERT INTO ZooKeeper VALUES (3, 'Rob Schneider', 250);")
c.execute("INSERT INTO Animal VALUES(1, 'Galapagos Penguin', 'exotic', 0.5);")
c.execute("INSERT INTO Animal VALUES(2, 'Emperor Penguin', 'rare', 0.75);")
c.execute("INSERT INTO Animal VALUES(3, 'Sri Lankan sloth bear', 'exotic', 2.5);")
c.execute("INSERT INTO Animal VALUES(4, 'Grizzly bear', 'common', 3.0);")
c.execute("INSERT INTO Animal VALUES(5, 'Giant Panda bear', 'exotic', 1.5);")
c.execute("INSERT INTO Animal VALUES(6, 'Florida black bear', 'rare', 1.75);")
c.execute("INSERT INTO Animal VALUES(7, 'Siberian tiger', 'rare', 3.5);")
c.execute("INSERT INTO Animal VALUES(8, 'Bengal tiger', 'common', 2.75);")
c.execute("INSERT INTO Animal VALUES(9, 'South China tiger', 'exotic', 2.25);")
c.execute("INSERT INTO Animal VALUES(10, 'Alpaca', 'common', 0.25);")
c.execute("INSERT INTO Animal VALUES(11, 'Llama', NULL, 3.5);")
c.execute("INSERT INTO Handles VALUES(1, 1, '01-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(1, 2, '02-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(1, 10, '01-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(2, 3, '02-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(2, 4, '04-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(2, 5, '03-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(3, 7, '01-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(3, 8, '03-Jan-2000');")
c.execute("INSERT INTO Handles VALUES(3, 9, '05-Jan-2000');")
c.execute("INSERT INTO Handles Values(3, 10,'04-Jan-2000');")

# Open and read the file as a single buffer
fd = open('/Users/TaihuaLi/Desktop/DePaul/CSC455 Database Processing/Homework/Assignment5/Part1.sql', 'r')
# Read as a single document (not individual lines)
sqlFile = fd.read()
fd.close()

# all SQL commands (split on ';' which separates them)
sqlCommands = sqlFile.split(';')

# Execute every command from the input file (separated by ";")
for command in sqlCommands:
    # This will skip and report errors
    # For example, if the tables do not yet exist, this will skip over
    # the DROP TABLE commands
    try:
        c.execute(command)
        print ("executed command: "+command +"\n")
        print("Output of this query is:")
        for i in c.fetchall():
            print(i)
    except OperationalError:
        print ("Command skipped: "+ command)

c.close()
conn.commit()
conn.close()
